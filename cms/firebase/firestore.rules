rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions - Optimized for Firebase v10.13.2
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function getUserRole() {
      return isAuthenticated() ? getUserData().role : null;
    }
    
    function isAdmin() {
      return isAuthenticated() && getUserRole() == 'admin';
    }
    
    function isEditor() {
      return isAuthenticated() && getUserRole() in ['admin', 'editor'];
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isActiveUser() {
      return isAuthenticated() && getUserData().status == 'active';
    }
    
    function isValidEmail() {
      return isAuthenticated() && request.auth.token.email_verified == true;
    }
    
    function hasValidTimestamp(data) {
      return 'createdAt' in data && 'updatedAt' in data;
    }

    // Users collection - Enhanced for Firebase v10
    match /users/{userId} {
      // Users can read their own profile, admins can read all
      allow read: if isOwner(userId) || isAdmin();
      
      // Users can create their own profile on first login
      allow create: if isOwner(userId) && 
                       isValidEmail() &&
                       request.auth.uid == request.resource.data.uid &&
                       request.auth.token.email == request.resource.data.email &&
                       hasValidTimestamp(request.resource.data) &&
                       request.resource.data.role == 'user' &&
                       request.resource.data.status == 'active';
      
      // Users can update their own profile (except role and status)
      allow update: if isOwner(userId) && 
                       isActiveUser() &&
                       !('role' in request.resource.data.diff(resource.data).affectedKeys()) &&
                       !('status' in request.resource.data.diff(resource.data).affectedKeys()) &&
                       hasValidTimestamp(request.resource.data);
      
      // Only admins can update roles and status
      allow update: if isAdmin() && 
                       isActiveUser() &&
                       hasValidTimestamp(request.resource.data);
      
      // Only admins can delete users (soft delete by setting status to 'inactive')
      allow delete: if isAdmin() && isActiveUser();
    }

    // Blog posts collection - Enhanced for Firebase v10
    match /blogs/{blogId} {
      // Anyone can read published posts, editors+ can read all
      allow read: if resource.data.status == 'published' || isEditor();
      
      // Editors+ can create posts
      allow create: if isEditor() && 
                       isActiveUser() &&
                       request.auth.uid == request.resource.data.author.id &&
                       hasValidTimestamp(request.resource.data) &&
                       request.resource.data.status in ['draft', 'published'];
      
      // Authors can edit their own posts, admins can edit any
      allow update: if isActiveUser() && 
                       hasValidTimestamp(request.resource.data) &&
                       (isAdmin() || 
                        (isEditor() && request.auth.uid == resource.data.author.id));
      
      // Only admins can delete posts
      allow delete: if isAdmin() && isActiveUser();
    }

    // Products collection
    match /products/{productId} {
      // Anyone can read products
      allow read: if true;
      
      // Only admins can manage products
      allow create, update, delete: if isAdmin() && isActiveUser();
    }

    // Categories collection
    match /categories/{categoryId} {
      // Anyone can read categories
      allow read: if true;
      
      // Only admins can manage categories
      allow create, update, delete: if isAdmin() && isActiveUser();
    }

    // Site settings collection
    match /site-settings/{settingId} {
      // Anyone can read general settings
      allow read: if true;
      
      // Only admins can update settings
      allow create, update, delete: if isAdmin() && isActiveUser();
    }

    // Contact inquiries collection
    match /contact-inquiries/{inquiryId} {
      // Anyone can create inquiries
      allow create: if true;
      
      // Only admins can read and manage inquiries
      allow read, update, delete: if isAdmin() && isActiveUser();
    }

    // Analytics collection (for storing page views, etc.) - Enhanced for Firebase v10
    match /analytics/{docId} {
      // System can write analytics data (with rate limiting)
      allow create: if request.resource.data.size() < 50 && // Limit document size
                       hasValidTimestamp(request.resource.data);
      allow update: if request.resource.data.size() < 50 &&
                       hasValidTimestamp(request.resource.data);
      
      // Editors+ can read analytics
      allow read: if isEditor() && isActiveUser();
      
      // Only admins can delete analytics
      allow delete: if isAdmin() && isActiveUser();
    }

    // Audit logs collection - Enhanced for Firebase v10
    match /audit-logs/{logId} {
      // System can create audit logs (authenticated users only)
      allow create: if isAuthenticated() && 
                       isActiveUser() &&
                       hasValidTimestamp(request.resource.data) &&
                       request.resource.data.userId == request.auth.uid;
      
      // Only admins can read audit logs
      allow read: if isAdmin() && isActiveUser();
      
      // Audit logs cannot be updated or deleted (immutable)
      allow update, delete: if false;
    }
    
    // System logs collection (for setup, migration, etc.)
    match /system-logs/{logId} {
      // System operations can create logs
      allow create: if hasValidTimestamp(request.resource.data);
      
      // Only admins can read system logs
      allow read: if isAdmin() && isActiveUser();
      
      // System logs are immutable
      allow update, delete: if false;
    }
    
    // Setup test collection (for Firebase testing)
    match /setup-test/{testId} {
      // Allow temporary test documents for setup verification
      allow create, update, delete: if true;
    }
  }
}